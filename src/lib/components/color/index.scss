////
/// DivoDivnoe Color
/// @group color
////

@include dd-system-componentRegister(dd-color);

@function dd-color-bootstrap()
{
	$dd-color-palette: (
		splashy: #EC6A00,
		emphasis: #FFCC65,
		deep: #34362D,
		neutral: #669E81,
		default: #333333,
	) !default !global;

	$dd-color-default: default !default !global;

	$dd-color-state: (
		default: #666666,
		error: #ED5135,
		success: #669E81,
		warning: #FFCC65,
		notice: #8fccff,
		muted: #CCCCCC,
	) !default !global;

	$dd-color-modifier: (
		light: dd-color-modifierLight,
		dark: dd-color-modifierDark,
	) !default !global;

	@return true;
}

@function dd-color-modifierLight($_color)
{
	@return mix(#fff, $_color, 10%);
}

@function dd-color-modifierDark($_color)
{
	@return mix(#000, $_color, 10%);
}

@function dd-color-modifier($_color, $_modifier: null)
{
	$_modifierFunc: map_get($dd-color-modifier, $_modifier);
	@if ($_modifierFunc == null) {
		$_: dd-system-message('Не существует модификатора цвета "#{$_modifier}"');
		@return $_color;
	}
	@if (not function_exists($_modifierFunc)) {
		$_: dd-system-message('Не существует функции модификатора цвета "#{$_modifierFunc}"');
		@return $_color;
	}
	@return call($_modifierFunc, $_color);
}

@function _dd-color-get($_map, $_colorSrc, $_modifier: null, $_strict: false)
{
	$_color: map_get($_map, $_colorSrc);
	@if ($_color == null) {
		@if ($_strict == true) {
			$_: dd-system-message('Не существует цвета "#{$_color}"');
			@return null;
		} @else {
			$_color: $_colorSrc;
		}
	}
	@if ($_modifier != null) {
		$_color: dd-color-modifier($_color, $_modifier);
	}
	@return $_color;
}

@function dd-color-palette($_color, $_modifier: null, $_strict: false)
{
	@return _dd-color-get($dd-color-palette, $_color, $_modifier, $_strict);
}

@function dd-color-state($_color, $_modifier: null, $_strict: false)
{
	@return _dd-color-get($dd-color-state, $_color, $_modifier, $_strict);
}

@function dd-color-contrast($_color, $_dark: #000, $_light: #fff) {
	@if (type_of($_color) == string) {
		$_color: dd-color-palette($_color);
	}
	@if (type_of($_dark) == string) {
		$_dark: dd-color-palette($_dark);
	}
	@if (type_of($_light) == string) {
		$_light: dd-color-palette($_light);
	}
	@if $_color == null {
		@return null;
	}
	@else {
		$_yiq: (red($_color) * 299 + green($_color) * 587 + blue($_color) * 114) / 1000;
		@return if($_yiq >= 133, $_dark, $_light);
	}
}

@mixin dd-color-map($_map, $_property: 'color', $_prefix: '')
{
	@each $_name, $_color in $_map {
		&.#{$_prefix}#{$_name} {
			#{$_property}: $_color;
		}
	}
}