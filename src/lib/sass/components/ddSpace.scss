/*
	DivoDivnoe Space
*/

$dd-space-defaultSpace: 16px !default;

$dd-space-factor: (
	tiny: 0.25,
	small: 0.5,
	medium: 1,
	large: 2,
	massive: 4,
);

@function dd-space-getSpace($_factor, $_strict: false)
{
	@if (type_of($_factor) == string) {
		$_val: map_get($dd-space-factor, $_factor);
		@if ($_val != null) {
			@return round($_val * $dd-space-defaultSpace);
		} @else {
			$üóë: dd-system-message('–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ä–∞–∑–º–µ—Ä–∞ "#{$_factor}"');
			@return null;
		}
	} @elseif (type_of($_factor) == number and unitless($_factor)) {
		@return round($_factor * $dd-space-defaultSpace);
	} @else {
		@if ($_strict) {
			$üóë: dd-system-message('–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è —Ä–∞–∑–º–µ—Ä–∞ "#{$_factor}"');
			@return null;
		}
	}
	@return $_factor;
}

@function dd-space-getFactor($_factor)
{
	@return map_get($dd-space-factor, $_factor);
}

@mixin dd-space($_factor)
{
	display: block;
	height: dd-space-getSpace($_factor);
}

.#{$dd-system-classPrefix}space {
	display: block;
	@each $_key, $_val in $dd-space-factor {
		&._#{$_key} {
			height: dd-space-getSpace($_key);
		}
	}
}