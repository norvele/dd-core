$typ-fontFamily: Arial, sans-serif !default;
$typ-fontSize: 16px !default;
$typ-lineHeight: 1.3 !default;
$typ-headerLineHeight: 1.3 !default;
$typ-color: #333 !default;
$typ-linkColor: #34a1cf !default;
$typ-linkHoverColor: #cf3434 !default;
$typ-linkVisitedColor: #9534cf !default;
$typ-headerSizes: (3em, 2.25em, 1.5em, 1.3em, 1.12em, 1em) !default;
$typ-blockElements: (mark, pre, code, a, strong, em, s, del, u, ins, small, abbr, blockquote, ul, ol) !default;
$typ-rhythm: 1em * $typ-lineHeight !default;

// Нужно для доступа к любому заголовку
.typ-prototype-header {
	font-weight: 600;
	line-height: $typ-headerLineHeight;
}

@mixin typ-header($_size) {
	@extend .typ-prototype-header;
	font-size: $_size;
	// Если размер в нормальных единицах - то вычисляем отступы
	// для поддержания вертикального ритма
	@if unit($_size) == em {
		// Высчитываем $typ-rhythm в контексте заголовка в em
		$_headingRhythm: $typ-lineHeight / ddHelpersStripUnits($_size) + 0em;
		// Высчитываем разницу между абсолютным и контекстным ритмом
		$_rhythmRate: $typ-rhythm / $_headingRhythm;
		// Считаем относительный размер заголовка
		$_headingRelativeSize: ($_size * $typ-headerLineHeight) / $_rhythmRate;
		// Считаем относительные размеры с отступами
		$_headingRelativeFullSize: $_headingRelativeSize + $_headingRhythm * 3;
		// Находим число вхождений ритма в размер и округляем
		$_occurrence: round($_headingRelativeFullSize / $_headingRhythm);
		// Вычисляем новый округленный размер
		$_roundHeadingRelativeFullSize: $_occurrence * $_headingRhythm;
		$_fullMargin: $_roundHeadingRelativeFullSize - $_headingRelativeSize;
		margin-top: $_fullMargin/3*2;
		margin-bottom: $_fullMargin/3;
	} @else {
		margin: $typ-fontSize*2 0 $typ-fontSize;
	}
}

// Генерируем заголовки
@for $_i from 1 through length($typ-headerSizes) {
	h#{$_i}.typ {
		@include typ-header(nth($typ-headerSizes, $_i))
	}
}

// Описываем стили элементов
mark.typ {
	background: #eff6ff;
	padding: 0.2em;
}

pre.typ {
	white-space: pre;
	tab-size: 4;
}

code.typ {
	background: #f7f7f7;
	padding: 0.2em 0.4em;
	border-radius: 3px;
	font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
}

code.typ._block {
	display: inline-block;
	max-width: 100%;
	background: #2b2b2b;
	color: #fff;
	padding: $typ-rhythm;
	overflow-x: auto;
	white-space: pre;
	tab-size: 4;
	box-sizing: border-box;
}

a.typ {
	color: $typ-linkColor;
	text-decoration: underline;

	&:visited {
		color: $typ-linkVisitedColor;
	}

	&:hover {
		color: $typ-linkHoverColor;
		text-decoration: none;
	}
}

strong.typ {
	font-weight: 600;
}

em.typ {
	font-style: italic;
}

s.typ, del.typ {
	text-decoration: line-through;
}

u.typ, ins.typ {
	text-decoration: underline;
}

small.typ {
	font-size: 0.8em;
}

abbr.typ {
	cursor: help;
	border-bottom: 1px dotted;
}

ul.typ {
	list-style: disc;
	padding-left: 40px;

	ul, ol {
		margin-bottom: 0;
	}
}

ol.typ {
	list-style: decimal;
	padding-left: 40px;

	ul, ol {
		margin-bottom: 0;
	}
}

blockquote.typ {
	border-left: 5px solid #eee;
	padding: $typ-rhythm 0 $typ-rhythm calc(#{$typ-rhythm} - 5px);

	& > p:last-child {
		margin-bottom: 0;
	}

	& > footer {
		color: lighten($typ-color, 30%);
		font-size: 0.9em;
	}

	&: before {
		content: '\2014 \00A0';
	}
}

img {
	max-width: 100%;
}

// Наследуем стили элементов в блоке
.typ-block {
	font-size: $typ-fontSize;
	font-family: Arial, sans-serif;
	line-height: $typ-lineHeight;
	color: $typ-color;

	@for $_i from 1 through length($typ-headerSizes) {
		h#{$_i} {
			@extend h#{$_i}.typ;
		}
	}

	@each $_el in $typ-blockElements {
		#{$_el} {
			@extend #{$_el}.typ;
		}
	}

	// Отступы для элементов
	p, pre, blockquote, ul, ol, img {
		margin-bottom: $typ-rhythm;

		&:last-child {
			margin-bottom: 0;
		}
	}
}

// Контроль размера строк текста
.typ-widthControl {
	max-width: 30em;
	position: relative;
}

.typ-rhythmGrid {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-image:
		linear-gradient(#aacee6 1px, transparent 1px),
		linear-gradient(to right, #aacee6 1px, transparent 1px),
		linear-gradient(to right, transparent $typ-rhythm, #aacee6 $typ-rhythm);
	background-size:
		100% $typ-rhythm,
		calc(#{$typ-rhythm} + 2px) 100%,
		calc(#{$typ-rhythm} + 2px) 100%;
	background-repeat: repeat, no-repeat, no-repeat;
}